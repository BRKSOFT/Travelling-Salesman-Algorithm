/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gezgin_kargocu_problemi;


import static gezgin_kargocu_problemi.Harita.labels;
import static gezgin_kargocu_problemi.Harita.labels2;
import static gezgin_kargocu_problemi.Harita.*;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.*;
import javax.swing.*;


/**
 *
 * @author berka
 */

public class Menu extends javax.swing.JFrame {
    /**
     * Creates new form Menu
     */ 
    //public static prevs prev = new prevs();
    //public static List<List<Integer>> permutasyonlar = new ArrayList<List<Integer>>();
    //public static int boyut=0;
    //public static int counter_shortest_paths = 0;
    //public static List<List<Integer>> shortest_paths = new ArrayList<List<Integer>>(); 
    //public static int a[];
    //public static int sehir_sayisi;
    //public static String[] b = new String[sehir_sayisi];
    
            
    public Menu() {
        initComponents();
        setIconImage();
        setTitle();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        baslik = new javax.swing.JLabel();
        jButtonHaritaAc = new javax.swing.JButton();
        jLabelResim = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        baslik.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        baslik.setText("Gezgin Kargocu Problemi Programı'na Hoşgeldiniz...");

        jButtonHaritaAc.setText("HARİTAYI AÇMAK İÇİN BASINIZ");
        jButtonHaritaAc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHaritaAcActionPerformed(evt);
            }
        });

        jLabelResim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gezgin_kargocu_problemi/marka.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(jLabelResim))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jButtonHaritaAc, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(baslik)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(baslik, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelResim)
                .addGap(26, 26, 26)
                .addComponent(jButtonHaritaAc, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonHaritaAcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHaritaAcActionPerformed
        new Harita().setVisible(true);
        labels[0]=jLabel1;
        labels[1]=jLabel2;
        labels[2]=jLabel3;
        labels[3]=jLabel4;
        labels[4]=jLabel5;
        labels[5]=jLabel6;
        labels[6]=jLabel7;
        labels[7]=jLabel8;
        labels[8]=jLabel9;
        labels[9]=jLabel10;
        labels[10]=jLabel11;
        labels[11]=jLabel12;
        labels[12]=jLabel13;
        labels[13]=jLabel14;
        labels[14]=jLabel15;
        labels[15]=jLabel16;
        labels[16]=jLabel17;
        labels[17]=jLabel18;
        labels[18]=jLabel19;
        labels[19]=jLabel20;
        labels[20]=jLabel21;
        labels[21]=jLabel22;
        labels[22]=jLabel23;
        labels[23]=jLabel24;
        labels[24]=jLabel25;
        labels[25]=jLabel26;
        labels[26]=jLabel27;
        labels[27]=jLabel28;
        labels[28]=jLabel29;
        labels[29]=jLabel30;
        labels[30]=jLabel31;
        labels[31]=jLabel32;
        labels[32]=jLabel33;
        labels[33]=jLabel34;
        labels[34]=jLabel35;
        labels[35]=jLabel36;
        labels[36]=jLabel37;
        labels[37]=jLabel38;
        labels[38]=jLabel39;
        labels[39]=jLabel40;
        labels[40]=jLabel41;
        labels[41]=jLabel42;
        labels[42]=jLabel43;
        labels[43]=jLabel44;
        labels[44]=jLabel45;
        labels[45]=jLabel46;
        labels[46]=jLabel47;
        labels[47]=jLabel48;
        labels[48]=jLabel49;
        labels[49]=jLabel50;
        labels[50]=jLabel51;
        labels[51]=jLabel52;
        labels[52]=jLabel53;
        labels[53]=jLabel54;
        labels[54]=jLabel55;
        labels[55]=jLabel56;
        labels[56]=jLabel57;
        labels[57]=jLabel58;
        labels[58]=jLabel59;
        labels[59]=jLabel60;
        labels[60]=jLabel61;
        labels[61]=jLabel62;
        labels[62]=jLabel63;
        labels[63]=jLabel64;
        labels[64]=jLabel65;
        labels[65]=jLabel66;
        labels[66]=jLabel67;
        labels[67]=jLabel68;
        labels[68]=jLabel69;
        labels[69]=jLabel70;
        labels[70]=jLabel71;
        labels[71]=jLabel72;
        labels[72]=jLabel73;
        labels[73]=jLabel74;
        labels[74]=jLabel75;
        labels[75]=jLabel76;
        labels[76]=jLabel77;
        labels[77]=jLabel78;
        labels[78]=jLabel79;
        labels[79]=jLabel80;
        labels[80]=jLabel81;        
        labels[81]=jLabel82;
        labels[82]=jLabel83;
        labels[83]=jLabel84;
        labels[84]=jLabel85;
        labels[85]=jLabel86;
        labels[86]=jLabel87;
        labels[87]=jLabel88;
        labels[88]=jLabel89;
        labels[89]=jLabel90;
        labels[90]=jLabel91;
        labels[91]=jLabel92;
        labels[92]=jLabel93;
        labels[93]=jLabel94;
        labels[94]=jLabel95;
        labels[95]=jLabel96;
        labels[96]=jLabel97;
        labels[97]=jLabel98;
        labels[98]=jLabel99;
        labels[99]=jLabel100;
        labels[100]=jLabel101;
        labels[101]=jLabel102;
        labels[102]=jLabel103;
        labels[103]=jLabel104;
        labels[104]=jLabel105;
        labels[105]=jLabel106;
        labels[106]=jLabel107;
        labels[107]=jLabel108;
        labels[108]=jLabel109;
        labels[109]=jLabel110;
        labels[110]=jLabel111;
        labels[111]=jLabel112;
        labels[112]=jLabel113;
        labels[113]=jLabel114;
        labels[114]=jLabel115;
        labels[115]=jLabel116;
        labels[116]=jLabel117;
        labels[117]=jLabel118;
        labels[118]=jLabel119;
        labels[119]=jLabel120;
        labels[120]=jLabel121;
        labels[121]=jLabel122;
        labels[122]=jLabel123;
        labels[123]=jLabel124;
        labels[124]=jLabel125;
        labels[125]=jLabel126;
        labels[126]=jLabel127;
        labels[127]=jLabel128;
        labels[128]=jLabel129;
        labels[129]=jLabel130;
        labels[130]=jLabel131;
        labels[131]=jLabel132;
        labels[132]=jLabel133;
        labels[133]=jLabel134;
        labels[134]=jLabel135;
        labels[135]=jLabel136;
        labels[136]=jLabel137;
        labels[137]=jLabel138;
        labels[138]=jLabel139;
        labels[139]=jLabel140;
        labels[140]=jLabel141;
        labels[141]=jLabel142;
        labels[142]=jLabel143;
        labels[143]=jLabel144;
        labels[144]=jLabel145;
        labels[145]=jLabel146;
        labels[146]=jLabel147;
        labels[147]=jLabel148;
        labels[148]=jLabel149;
        labels[149]=jLabel150;
        labels[150]=jLabel151;
        labels[151]=jLabel152;
        labels[152]=jLabel153;
        labels[153]=jLabel154;
        labels[154]=jLabel155;
        labels[155]=jLabel156;
        labels[156]=jLabel157;
        labels[157]=jLabel158;
        labels[158]=jLabel159;
        labels[159]=jLabel160;
        labels[160]=jLabel161;
        labels[161]=jLabel162;
        labels[162]=jLabel163;
        labels[163]=jLabel164;
        labels[164]=jLabel165;
        labels[165]=jLabel166;
        labels[166]=jLabel167;
        labels[167]=jLabel168;
        labels[168]=jLabel169;
        labels[169]=jLabel170;
        labels[170]=jLabel171;
        labels[171]=jLabel172;
        labels[172]=jLabel173;
        labels[173]=jLabel174;
        labels[174]=jLabel175;
        labels[175]=jLabel176;
        labels[176]=jLabel177;
        labels[177]=jLabel178;
        labels[178]=jLabel179;
        labels[179]=jLabel180;
        labels[180]=jLabel181;        
        labels[181]=jLabel182;
        labels[182]=jLabel183;
        labels[183]=jLabel184;
        labels[184]=jLabel185;
        labels[185]=jLabel186;
        labels[186]=jLabel187;
        labels[187]=jLabel188;
        labels[188]=jLabel189;
        labels[189]=jLabel190;
        labels[190]=jLabel191;
        labels[191]=jLabel192;
        labels[192]=jLabel193;
        labels[193]=jLabel194;
        labels[194]=jLabel195;
        labels[195]=jLabel196;
        labels[196]=jLabel197;
        labels[197]=jLabel198;
        labels[198]=jLabel199;
        labels[199]=jLabel200;
        labels[200]=jLabel201;    
        labels[201]=jLabel202;
        labels[202]=jLabel203;
        labels[203]=jLabel204;
        labels[204]=jLabel205;
        labels[205]=jLabel206;
        labels[206]=jLabel207;
        labels[207]=jLabel208;
        labels[208]=jLabel209;
        labels[209]=jLabel210;
        labels[210]=jLabel211;
        labels[211]=jLabel212;
        labels[212]=jLabel213;
        labels[213]=jLabel214;
        labels[214]=jLabel215;
        labels[215]=jLabel216;
        labels[216]=jLabel217;
        labels[217]=jLabel218;
        labels[218]=jLabel219;
        labels[219]=jLabel220;
        labels[220]=jLabel221;
        labels[221]=jLabel222;
        labels[222]=jLabel223;
        labels[223]=jLabel224;
        labels[224]=jLabel225;
        labels[225]=jLabel226;
        labels[226]=jLabel227;
        labels[227]=jLabel228;
        labels[228]=jLabel229;
        labels[229]=jLabel230;
        labels[230]=jLabel231;
        labels[231]=jLabel232;
        labels[232]=jLabel233;
        labels[233]=jLabel234;
        labels[234]=jLabel235;
        labels[235]=jLabel236;
        labels[236]=jLabel237;
        labels[237]=jLabel238;
        labels[238]=jLabel239;
        labels[239]=jLabel240;
        labels[240]=jLabel241;
        labels[241]=jLabel242;
        labels[242]=jLabel243;
        labels[243]=jLabel244;
        labels[244]=jLabel245;
        labels[245]=jLabel246;
        labels[246]=jLabel247;
        labels[247]=jLabel248;
        labels[248]=jLabel249;
        labels[249]=jLabel250;
        labels[250]=jLabel251;
        labels[251]=jLabel252;
        labels[252]=jLabel253;
        labels[253]=jLabel254;
        labels[254]=jLabel255;
        labels[255]=jLabel256;
        labels[256]=jLabel257;
        labels[257]=jLabel258;
        labels[258]=jLabel259;
        labels[259]=jLabel260;
        labels[260]=jLabel261;
        labels[261]=jLabel262;
        labels[262]=jLabel263;
        labels[263]=jLabel264;
        labels[264]=jLabel265;
        labels[265]=jLabel266;
        labels[266]=jLabel267;
        labels[267]=jLabel268;
        labels[268]=jLabel269;
        labels[269]=jLabel270;
        labels[270]=jLabel271;
        labels[271]=jLabel272;
        labels[272]=jLabel273;
        labels[273]=jLabel274;
        labels[274]=jLabel275;
        labels[275]=jLabel276;
        labels[276]=jLabel277;
        labels[277]=jLabel278;
        labels[278]=jLabel279;
        labels[279]=jLabel280;
        labels[280]=jLabel281;        
        labels[281]=jLabel282;
        labels[282]=jLabel283;
        labels[283]=jLabel284;
        labels[284]=jLabel285;
        labels[285]=jLabel286;
        labels[286]=jLabel287;
        labels[287]=jLabel288;
        labels[288]=jLabel289;
        labels[289]=jLabel290;
        labels[290]=jLabel291;
        labels[291]=jLabel292;
        labels[292]=jLabel293;
        labels[293]=jLabel294;
        labels[294]=jLabel295;
        labels[295]=jLabel296;
        labels[296]=jLabel297;
        labels[297]=jLabel298;
        labels[298]=jLabel299;
        labels[299]=jLabel300;
        labels[300]=jLabel301;
        labels[301]=jLabel302;
        labels[302]=jLabel303;
        labels[303]=jLabel304;
        labels[304]=jLabel305;
        labels[305]=jLabel306;
        labels[306]=jLabel307;
        labels[307]=jLabel308;
        labels[308]=jLabel309;
        labels[309]=jLabel310;
        labels[310]=jLabel311;
        labels[311]=jLabel312;
        labels[312]=jLabel313;
        labels[313]=jLabel314;
        labels[314]=jLabel315;
        labels[315]=jLabel316;
        labels[316]=jLabel317;
        labels[317]=jLabel318;
        labels[318]=jLabel319;
        labels[319]=jLabel320;
        labels[320]=jLabel321;
        labels[321]=jLabel322;
        labels[322]=jLabel323;
        labels[323]=jLabel324;
        
        for(int i=0 ; i<324 ; i++){
            labels[i].setVisible(false);
        }
            
    }//GEN-LAST:event_jButtonHaritaAcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static int minDistance(prevs prev, Boolean sptSet[])
    {
        // Initialize min value
        int min = Integer.MAX_VALUE, min_index = -1;

        for (int v = 0; v < 81; v++)
            if (sptSet[v] == false && prev.dist[v] <= min) {
                min = prev.dist[v];
                min_index = v;
            }
        return min_index;
    }
    public static int dijkstra(int graph[][], int src,int istikamet)
    {

        // the shortest distance from src to i

        // sptSet[i] will true if vertex i is included in shortest
        // path tree or shortest distance from src to i is finalized
        Boolean sptSet[] = new Boolean[81];
        for(int i=0 ; i<prev.dist.length ; i++){
            prev.dist[i]=Integer.MAX_VALUE;
        }
        prev.previous_cities.clear();

        // Initialize all distances as INFINITE and stpSet[] as false

        for (int i = 0; i < 81; i++) {
            prev.dist[i]= Integer.MAX_VALUE;
            prev.previous_cities.add(new ArrayList<Integer>());
            sptSet[i] = false;
        }

        // Distance of source vertex from itself is always 0
        prev.dist[src]=0;

        // Find shortest path for all vertices
        for (int count = 0; count < 81 - 1  ; count++) {
            // Pick the minimum distance vertex from the set of vertices
            // not yet processed. u is always equal to src in first
            // iteration.
            int u = minDistance(prev, sptSet);
            // Mark the picked vertex as processed
            sptSet[u] = true;

            // Update dist value of the adjacent vertices of the
            // picked vertex.
            for (int v = 0; v < 81; v++) {
                // Update dist[v] only if is not in sptSet, there is an
                // edge from u to v, and total weight of path from src to
                // v through u is smaller than current value of dist[v]

                if (!sptSet[v] && graph[u][v] != 0 && prev.dist[u] != Integer.MAX_VALUE && prev.dist[u] + graph[u][v] < prev.dist[v]) {
                    //prev.previous_cities.get(v).add(u);
                    //for(int i=0 ; i<prev.previous_cities.get(v).size() ; i++) System.out.printf("%d ",prev.previous_cities.get(v).get(i));
                    prev.previous_cities.get(v).add(u);
                    prev.dist[v] = prev.dist[u] + graph[u][v];
                    //printSolution(prev,v);
                    //System.out.println(prev.previous_cities.get(v));
                    //for(int i=0 ; i<81 ; i++)
                    //  for(int j=0 ; j<a.length ; j++) if(i==a[j]-1)System.out.println(a[j] + " .) " + prev.dist[i]);
                }
            }
        }
        // print the constructed distance array
        //printSolution(dist, 4,a);

        return prev.dist[istikamet-1];
    }
        public static void heapPermutation(int a[], int size, int n)
    {
        // if size becomes 1 then prints the obtained
        // permutation
        if (size == 1){
            permutasyonlar.add(new ArrayList<Integer>());
            for(int i=0 ; i<a.length ; i++)
                permutasyonlar.get(boyut).add(a[i]);
            boyut++;
        }

        for (int i=0; i<size-1; i++)
        {
            heapPermutation(a, size-1, n);

            // if size is odd, swap first and last
            // element
            if (size % 2 == 1)
            {
                int temp = a[0];
                a[0] = a[size-2];
                a[size-2] = temp;
            }

            // If size is even, swap ith and last
            // element
            else
            {
                int temp = a[i];
                a[i] = a[size-2];
                a[size-2] = temp;
            }
        }
    }
    public static int recursive(prevs prev,int i,int kalkis,List<Integer> shortestpath1){
        int sonuc = prev.previous_cities.get(i).get(prev.previous_cities.get(i).size()-1);
        //System.out.printf(sonuc + " ");
        shortestpath1.add(sonuc);
        if(sonuc==kalkis)
            return 0;
        return recursive(prev,sonuc,kalkis,shortestpath1);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.out.println("HEYYY");
        //prevler prev = new prevler();
        /*prev.previous_cities.add(new ArrayList<Integer>());
      
        prev.previous_cities.add(new ArrayList<Integer>());
        prev.previous_cities.get(0).add(5);
        prev.previous_cities.get(0).add(6);
        prev.previous_cities.get(0).add(7);
        for(int i=0 ; i<previous_cities.get(0).size() ; i++){
            System.out.println(prev.previous_cities.get(0).get(i));
        }
        */
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel baslik;
    public static javax.swing.JButton jButtonHaritaAc;
    private javax.swing.JLabel jLabelResim;
    // End of variables declaration//GEN-END:variables

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("bayrak.jpg")));
    }

    private void setTitle() {
        setTitle(" Gezgin Kargocu Problemi ");
    }
}
